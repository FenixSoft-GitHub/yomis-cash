---
import { supabase } from "@/lib/supabase";
import Layout from "@/layouts/Layout.astro";
import CloseIcon from "@/components/icons/Close.astro";

const { id } = Astro.params;

let tasa = null;

const { data, error } = await supabase
  .from("exchange_rates")
  .select("*")
  .eq("id", id)
  .single();

if (data) {
  tasa = data;
} else {
  console.error("Error al obtener el País:", error);
}

if (Astro.request.method === "POST") {
  const data = await Astro.request.formData();
  const pais = data.get("country");
  const moneda = data.get("currency");
  const tasaValor = data.get("rate");
  const simbolo = data.get("symbol");
  const file = data.get("image");

  interface UpdateData {
    country: FormDataEntryValue | null;
    currency: FormDataEntryValue | null;
    rate: FormDataEntryValue | null;
    symbol: FormDataEntryValue | null;
    image?: string[]; 
  }

  let updateData: UpdateData = {
    country: pais,
    currency: moneda,
    rate: tasaValor,
    symbol: simbolo,
    image: tasa.image,
  };

  //  if (file && file instanceof File && file.size > 0) {
  //   // Eliminar la imagen anterior si existe
  //   if (tasa.image && tasa.image.length > 0) {
  //     const previousImageUrl = tasa.image[0];
  //     const previousImageName = previousImageUrl.split("/").pop(); // Obtener el nombre del archivo

  //     if (previousImageName) {
  //       const { error: deleteError } = await supabase.storage
  //         .from("country_images")
  //         .remove([previousImageName]);

  //       if (deleteError) {
  //         console.error("Error al eliminar la imagen anterior:", deleteError);
  //       }
  //     }
  //   }

  //   // Subir la nueva imagen
  //   const fileName = `${Date.now()}-${file.name}`;
  //   const { data: uploadData, error: uploadError } = await supabase.storage
  //     .from("country_images")
  //     .upload(fileName, file, { upsert: true });

  //   if (uploadError) {
  //     console.error("Error al subir la imagen:", uploadError);
  //   } else {
  //     const { data: urlData } = supabase.storage
  //       .from("country_images")
  //       .getPublicUrl(fileName);

  //     // Guardar la nueva URL en un array
  //     updateData = { ...updateData, image: [urlData.publicUrl] };
  //   }
  // }

  if (file && typeof file === "object" && file instanceof File && file.size > 0) {
    const fileName = `${Date.now()}-${file.name}`;
    const { data: uploadData, error: uploadError } = await supabase.storage
      .from("country_images")
      .upload(fileName, file, { upsert: true });

    if (uploadError) {
      console.error("Error al subir la imagen:", uploadError);
    } else {
      const { data: urlData } = supabase.storage
        .from("country_images")
        .getPublicUrl(fileName);

      updateData = { ...updateData, image: [urlData.publicUrl] };
    }
  } 

  const { error: updateError } = await supabase
    .from("exchange_rates")
    .update(updateData)
    .eq("id", id);

  if (updateError) {
    console.error("Error al actualizar el País:", updateError);
  } else {
    return Astro.redirect("/admin/paisesList");
  }
}
---

<Layout title="Tasas de Cambio" description="">
   <section
    class="flex justify-center items-center bg-linear-to-t from-zinc-900 to-zinc-500"
  >
  <div class="container mx-auto mt-40 mb-5 max-w-3xl">
    <!-- Botón de cerrar -->
     <dir class="bg-gradient-to-t from-gray-400 to-gray-200 p-3 rounded-lg shadow-lg relative">
      <a
        href="/admin/paisesList"
        class="absolute top-4 right-3 p-1 bg-gray-300 text-gray-600 hover:bg-red-600 hover:text-white rounded-full transition ease-in-out duration-300 block"
        aria-label="Cerrar"
      >
        <CloseIcon class="w-4 h-4" />
      </a>
      <h1 class="text-2xl text-center font-bold text-gray-800">Editar País</h1>
     </dir>
    
    {
      tasa ? (
        <form 
          method="post" 
          enctype="multipart/form-data" 
          class="bg-gray-200 p-6 rounded-lg shadow-md mt-4"
        >
          <!-- GRID PARA DOS COLUMNAS -->
          <div class="grid grid-cols-1 sm:grid-cols-2 gap-4">
            <!-- País -->
            <div>
              <label class="block text-gray-700 text-sm font-bold mb-2" for="country">
                País:
              </label>
              <input
                id="country"
                type="text"
                name="country"
                value={tasa.country}
                placeholder="Ingrese el nombre del país"
                required
                class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white text-gray-900"
              />
            </div>

            <!-- Moneda -->
          <div>
            <label class="block text-gray-700 text-sm font-bold mb-2" for="currency">
              Moneda:
            </label>
            <input
              id="currency"
              type="text"
              name="currency"
              value={tasa.currency}
              placeholder="Ingrese el nombre de la moneda"
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white text-gray-900"
            />
          </div>

          <!-- Tasa  -->
          <div>
            <label class="block text-gray-700 text-sm font-bold mb-2" for="rate">
              Tasa:
            </label>
            <input
              id="rate"
              type="number"
              name="rate"
              value={tasa.rate}
              placeholder="Ingrese la tasa de cambio"
              required
              step="any"
              class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white text-gray-900"
            />
          </div>

          <!-- Símbolo -->
          <div>
            <label class="block text-gray-700 text-sm font-bold mb-2" for="symbol">
              Símbolo:
            </label>
            <input
              id="symbol"
              type="text"
              name="symbol"
              value={tasa.symbol}
              placeholder="Ingrese el símbolo de la moneda"
              required
              class="w-full px-3 py-2 border border-gray-300 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white text-gray-900"
            />
          </div>
          

          <!-- Grupo: Imagen -->
          <div>
            <label class="block text-gray-700 text-sm font-bold mb-2" for="image">
              Imagen:
            </label>
            <input
              id="image"
              type="file"
              name="image"
              accept="image/*"
              class="block w-full text-sm text-gray-700 border border-gray-300 rounded-lg p-2 bg-white shadow-sm focus:ring-blue-500 focus:border-blue-500"
            />
          </div>

          <div class="grid justify-center">
            <span class="block text-gray-700 text-sm font-bold mb-2" >
              Imagen:
            </span>
            {tasa.image && tasa.image.length > 0 ? (
                <img
                  src={tasa.image[0]}
                  alt={`Bandera de ${tasa.country}`}
                  class="mb-4 w-24 h-24 object-cover rounded-lg shadow-md"
                />
              ) : (
                <div class="mb-4 p-6 bg-gray-100 rounded-lg text-center text-gray-500">
                  No hay imagen disponible.
                </div>
              )}
          </div>
          
          </div>

          <!-- Botón de actualización -->
          <button
            type="submit"
            class="w-full bg-gradient-to-t from-blue-900 to-[rgba(52,216,251,1)] hover:scale-105 text-white font-bold py-2 px-4 mt-5 rounded-full focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200"
          >
            Actualizar
          </button>
        </form>
      ) : (
        <p class="text-center text-gray-600">País no encontrado.</p>
      )
    }
  </div>
  </section>
</Layout>